{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","usersFromServer","find","todoList","userId","getTodoId","Math","max","App","useState","setTodos","userError","showUserError","titleError","showTitleError","setTitle","setUserId","action","method","onSubmit","event","preventDefault","trim","newTodo","state","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbc416f5.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        && (\n          <UserInfo user={user} />\n        )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst getUser = (id: number): User | null => {\n  return usersFromServer.find(user => user.id === id) || null;\n};\n\nconst todoList: Todo[] = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUser(todo.userId),\n  }\n));\n\nconst getTodoId = (todos: Todo[]): number => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todoList);\n  const [userError, showUserError] = useState(false);\n  const [titleError, showTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    showTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    showUserError(false);\n  };\n\n  const clear = () => {\n    showUserError(false);\n    showTitleError(false);\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      showUserError(true);\n    }\n\n    if (!title.trim()) {\n      showTitleError(true);\n    }\n\n    if (userId && title.trim()) {\n      const newTodo: Todo = {\n        id: getTodoId(todos),\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodos(state => [...state, newTodo]);\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {titleError\n            && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user) => {\n              const { id, name } = user;\n\n              return (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {userError\n            && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}